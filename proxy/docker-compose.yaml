services:
  reverse-proxy:
    image: traefik:v2.11
    command:
      - --api.dashboard=true

      - --providers.docker=true
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true

      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true

      - --accesslog.filepath=/var/log/traefik/access.log
      - --accesslog.bufferingsize=100

    labels:
      traefik.enable: "true"
      traefik.http.routers.traefik.rule: Host(`proxy.schartis.at`)
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.entrypoints: websecure
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/certs/
      - ./traefik.yaml:/etc/traefik/dynamic/certs-traefik.yaml
      - ./log:/var/log/traefik
    environment:
      - TZ=Europe/Vienna
    networks:
      - proxy
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    labels:
      - "traefik.http.routers.master.rule=Host(`master.schartis.at`)"
      - "traefik.http.routers.master.tls=true"
    networks:
      - proxy
  # db:
  #   image: mysql
  #   environment:
  #     - MYSQL_DATABASE=orda
  #     - MYSQL_RANDOM_ROOT_PASSWORD=true
  #     - MYSQL_USER=orda
  #     - MYSQL_PASSWORD=orda
  #   command:
  #     - --performance_schema=0
  #     - --innodb_use_native_aio=0
  #   volumes:
  #     - db_data:/var/lib/mysql
  #     #- ./mysql/init:/docker-entrypoint-initdb.d/:ro
  #   healthcheck:
  #     test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
  #     start_period: 5s
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10
  #   networks:
  #     - proxy
  # adminer:
  #  image: adminer
  #  restart: always
  #  ports:
  #    - 8080:8080
  #  networks:
  #    - adminer
networks:
  proxy:
volumes:
  db_data:
